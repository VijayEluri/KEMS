public class main {
	
	private static boolean debug = true;
	
	//ex8_posfixo
	public static void main(String[] args) {
		String operacao = ""; 
		String posFixa = "";
		
		/*
		System.out.println("verificaPrecedencia(\"*\", \"*\") = " + verificaPrecedencia("*","*"));
		System.out.println("verificaPrecedencia(\"*\", \"+\") = " + verificaPrecedencia("*","+"));
		System.out.println("verificaPrecedencia(\"*\", \"-\") = " + verificaPrecedencia("*","-"));
		System.out.println("verificaPrecedencia(\"/\", \"-\") = " + verificaPrecedencia("/","-"));
		System.out.println("verificaPrecedencia(\"-\", \"-\") = " + verificaPrecedencia("-","-"));
		System.out.println("verificaPrecedencia(\"+\", \"-\") = " + verificaPrecedencia("+","-"));
		System.out.println("verificaPrecedencia(\"+\", \"*\") = " + verificaPrecedencia("+","*"));
		*/
		
		int escolha;
		menu();
		
		do {
			escolha = Integer.parseInt(Consolegambijava.leia());
			switch(escolha) {
				case 1: menu(); break;
				case 2: 
					posFixa = "";
					operacao = "";
					System.out.println("Digite uma operacao:");
					operacao = getOperacaoFormatada(Consolegambijava.leia());
					System.out.println("Sua operacao eh:"+operacao+"\n");
					
					break;
				case 3: //posfixo
					
					posFixa = getPosFixa(operacao);
					System.out.println("Pos fixa = " + posFixa);
					break;
				default: break;
			}
		} while(escolha != 5);
		
		
	}
	
	/**
	 * Retorna a f�rmula PosFixa
	 * */
	private static String getPosFixa(String operacao){
		String posFixa = "";
		String[] operandos = operacao.split(" ");
		String o; String top;
		Pilha pi = new Pilha();
		
		for (int i = 0; i < operandos.length;i++){
			o = operandos[i];
			System.out.println("o = " + o);
			
			if (ehNumero(o)){
				posFixa += o + " ";
			} else {
				if (pi.vazia() && !o.equals(")")) {
					if (debug) {System.out.println("#add " + o);}
					pi.push(o);
				} else {
					
					if (!pi.vazia() && pi.top(false).equals("(") && o.equals(")")) {
						pi.pop();
					} else  {
						if (!o.equals(")")){
							if (debug) {System.out.println("Precedencia o = " + o + " e pi.top = " + pi.top(false) + " ? " + precedencia(pi.top(false), o));}
							if (precedencia(pi.top(false), o)) {
								if (debug) {System.out.println("#add " + o);}
								pi.push(o);
							} else {
								top = pi.top(true);
								if (debug) {System.out.println("#remv " + top);}
								posFixa += top + " "; 
							}
						}
					}
					/*
					if (pi.top(false).equals("(") && o.equals(")")) {
						//remover top;
						pi.pop();
					} else {
						if (precedencia(pi.top(false), o)) {
							pi.push(o);
						} else {
							top = pi.top(true); 
							posFixa += top + " "; 
							
						}
					}
					*/
				}
				/*
				while(!pi.vazia()) {
					posFixa += pi.top(true) + " "; 
				}
				*/
			}
		
			if (debug) {System.out.println("#pi.vazia() " + pi.vazia());}}
		
		if (!pi.vazia()){
			while(!pi.vazia()) {
				top = pi.top(true);
				if (debug) {System.out.println("#3remv " + top);}
				posFixa += top + " "; 
			}
		}
		/*
		 if (!pi.vazia()){
			while(!pi.vazia()) {
				//posFixa += pi.top(true) + " ";
				if (! pi.top(false).equals("(") && ! pi.top(false).equals(")")) {
					System.out.println("Pi =" + pi.top(false));
					posFixa += pi.top(true) + " ";
				}
			}
		}
		*/
		return posFixa;
	}
	
	/**
	 * Retorna a opera��o formatada
	 * */
	private static String getOperacaoFormatada(String operacao){
		String format = "";
		char ch;
		if (operacao.length() > 0 && !operacao.equals("")){
			for (int i = 0; i< operacao.length(); i++){
				ch = operacao.charAt(i);
				if (debug) { System.out.println(ch);}
				if (ehOperando(ch) && !Character.isDigit(ch)){
					if (i > 0) {
						format += " ";
					}
					format += String.valueOf(ch) + ((i == operacao.length()) ? "":  " ");
				} else {
					format += ch;
				}
			}
			
			//remover espa�os duplos
			while (format.contains("  ")) {
				format = format.replace("  " , " ");
			}
			
		}

		return format;
	}
	
	private static boolean precedencia(String v1, String v2){
		if (v1.equals("(")) {
			return true;
		}
		if (v1.equals(v2)) {
			return false;
		}
		if (v1.equals("*") || v1.equals("/")) {
			if (v2.equals("+") || v2.equals("-")) {
				return true;
			}
		}
		if (v2.equals("*") || v2.equals("/")) {
			if (v1.equals("+") || v1.equals("-")) {
				return false;
			}
		}
		
	}
	
	private static boolean ehNumero(String valor){
		for(int i = 0; i < valor.length(); i++){
	        if(!Character.isDigit(valor.charAt(i))){
	            return false;
	        }
	    }    
		return true;
	}
	
	private static String[] quebraOperacao(String op){
		int indices[] = getIndicesOperandos(op);
		String oper[] = new String[totalItens(op)];
		for(int i = 0; i < oper.length; i++) { oper[i] = ""; }
		int index = 0;
	
		if (debug){ System.out.println("op=" + op); }
		
		if (indices.length > 0) {
			for (int i = 0; i < indices.length; i++) {
				if (i == 0) {
					if (debug){ System.out.println("#1 - " + op.substring(0,indices[i]) + " | indices[i] = " + indices[i] + " i = " + i);}
					oper[index] = op.substring(0,indices[i]);
					index++;
					if (debug){ System.out.println("#1 - " + op.charAt(indices[i]) + " | indices[i] = " + indices[i] + " i = " + i);}
					oper[index] = String.valueOf(op.charAt(indices[i]));
					index++;
					
				} else {
					if (debug){ System.out.println("#2 - " + op.substring(indices[i-1]+1,indices[i]) + " | indices[i] = " + indices[i] + " i = " + i);}
					oper[index] = op.substring(indices[i-1]+1,indices[i]);
					index++;
					if (debug){ System.out.println("#1 - " + op.charAt(indices[i]) + " | indices[i] = " + indices[i] + " i = " + i);}
					oper[index] = String.valueOf(op.charAt(indices[i]));
					index++;
					
				}
			}
			if (debug){ System.out.println("#3 - " + op.substring(indices[indices.length-1]+1,op.length()) + " | indices[indices.length-1] = " + indices[indices.length-1] + " indices.length-1 = " + (indices.length-1));}
			oper[index] = op.substring(indices[indices.length-1]+1,op.length());
		
			index++;
		} else {
			if (debug){ System.out.println("#1 - " + op);}
			oper[index] = op;
			index++;
		}
		
		return oper;		
	} 
	
	private static void menu(){
		String m = "";
		m = "1 - menu\n";
		m += "2 - inserir operacao\n";
		m += "3 - posfixo\n";
		m += "4 - resolver posfixo\n";
		m += "5 - sair\n";
		System.out.println(m);
	}
	
	private static int[] getIndicesOperandos(String operacao){
		int indices[] = new int[totalOperandos(operacao)];
		int iI = 0;
		
		for (int i = 0; i < operacao.length(); i ++) {
			//System.out.println("op.charAt("+i+") = " + op.charAt(i));
			if (ehOperando(operacao.charAt(i))) {
				indices[iI] = i;
				iI++;
			}
		}
		return indices;
	}
	
	private static int totalItens(String operacao){
		int nItens = 0;
		boolean operando = false;
		for (int i = 0; i < operacao.length(); i ++) {
			if (debug){ System.out.println("operacao.charAt("+i+") = " + operacao.charAt(i));}
			if (ehOperando(operacao.charAt(i))) {
				nItens++;
				operando = false;
			} else {
				//digito
				if (!operando) {
					nItens++;
					operando = true;
				}
			}
		}
		return nItens;
	}
	
	private static int totalOperandos(String operacao){
		int rt = 0;
		for (int i = 0; i < operacao.length(); i ++) {
			if (ehOperando(operacao.charAt(i))) {
				rt++;
			}
		}
		return rt;
	}
	
	private static boolean operandoOK(char o){
		if (Character.isDigit(o)) {
			 return true;
		} else {
			return ehOperando(o);
		}
	}
	
	private static boolean ehOperando(char o){
		String[] opV = operandosValidos();
		for (int i = 0; i < opV.length; i++) {
			if (opV[i].equals(String.valueOf(o))) {
				//if (debug){System.out.println("opV["+i+"] = " + opV[i]);}
				return true;
			}
		}
		return false;
	} 
	
	private static String[] operandosValidos(){
		String[] rt = {"(", ")", "+", "-", "*", "/", "{", "}"};
		return rt;
	}
	
	private static String getOperandoOk(String s){
		String rt = "";
		for (int i = 0; i < s.length(); i ++) {
			//System.out.println("* " + s.charAt(i));
			if (operandoOK(s.charAt(i))) {
				rt += String.valueOf(s.charAt(i));
			}
		}
		return rt;
	}
	
}
