<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="rules.structures.PBRuleList"/>
<fullyQualifiedTypeName name="rules.patterns.C1_Sign_T_NOT_ANY_LEFT_Pattern"/>
<fullyQualifiedTypeName name="rules.patterns.C1_T_NOT_ANY_LEFT_Pattern"/>
<fullyQualifiedTypeName name="rules.getters.C1_F_CONS_ANY_Getter"/>
<fullyQualifiedTypeName name="rules.KEAction"/>
<fullyQualifiedTypeName name="rules.ActionType"/>
<fullyQualifiedTypeName name="rules.getters.KESignedFormulaGetter"/>
<fullyQualifiedTypeName name="logic.formulas.Connective"/>
<fullyQualifiedTypeName name="rules.TwoPremisesOneConclusionRule"/>
<fullyQualifiedTypeName name="rules.NullRule"/>
<fullyQualifiedTypeName name="main.newstrategy.c1.simple.C1ThreePremiseRuleApplicator"/>
<fullyQualifiedTypeName name="main.newstrategy.c1.simple.C1_PBRuleApplicator"/>
<fullyQualifiedTypeName name="logic.problem.Problem"/>
<fullyQualifiedTypeName name="logicalSystems.c1.C1SimpleStrategyTest"/>
<fullyQualifiedTypeName name="main.newstrategy.c1.simple.C1SimpleStrategy"/>
<fullyQualifiedTypeName name="proverinterface.ProverFacade"/>
<fullyQualifiedTypeName name="main.newstrategy.Prover"/>
<fullyQualifiedTypeName name="main.newstrategy.mbc.simple.MBCSimpleStrategy"/>
<fullyQualifiedTypeName name="main.newstrategy.cpl.configurable.comparator.InsertionOrderSignedFormulaComparator"/>
<fullyQualifiedTypeName name="rules.patterns.C1ConsistencyPattern"/>
<fullyQualifiedTypeName name="rules.patterns.C1SignConsistencyPattern"/>
<fullyQualifiedTypeName name="main.newstrategy.c1.simple.C1_T_NOT_1_PBRuleApplicator"/>
<fullyQualifiedTypeName name="logic.formulas.CompositeFormula"/>
<fullyQualifiedTypeName name="rules.patterns.C1_T_NOT_ANY_Pattern"/>
<fullyQualifiedTypeName name="logicalSystems.c1.C1Connectives"/>
<fullyQualifiedTypeName name="rules.KERuleRole"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.lang.Character"/>
<fullyQualifiedTypeName name="java.lang.CharSequence"/>
<fullyQualifiedTypeName name="problemGenerator.simple.ConsistencyConversor.Caracteres"/>
<fullyQualifiedTypeName name="problemGenerator.simple.ProblemConsistencyConverter"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="problemGenerator.simple.ConsistencyConverter"/>
<fullyQualifiedTypeName name="org.apache.log4j.helpers.FileWatchdog"/>
<fullyQualifiedTypeName name="main.proofTree.origin.IOrigin"/>
<fullyQualifiedTypeName name="main.proofTree.origin.SignedFormulaNodeOrigin"/>
<fullyQualifiedTypeName name="logicalSystems.c1.C1Rules"/>
<fullyQualifiedTypeName name="logic.formulas.Formula"/>
<fullyQualifiedTypeName name="logicalSystems.c1.C1Signs"/>
<fullyQualifiedTypeName name="logic.signedFormulas.SignedFormula"/>
<fullyQualifiedTypeName name="logic.signedFormulas.SignedFormulaFactory"/>
<fullyQualifiedTypeName name="main.proofTree.SignedFormulaNodeState"/>
<fullyQualifiedTypeName name="main.proofTree.origin.NamedOrigin"/>
<fullyQualifiedTypeName name="main.tableau.verifier.ExtendedNode"/>
<fullyQualifiedTypeName name="main.proofTree.SignedFormulaNode"/>
<fullyQualifiedTypeName name="main.newstrategy.AbstractSimpleStrategy"/>
<fullyQualifiedTypeName name="main.strategy.simple.FormulaReferenceClassicalProofTree"/>
<fullyQualifiedTypeName name="javax.swing.JFrame"/>
<fullyQualifiedTypeName name="Factory.AloFactory"/>
<fullyQualifiedTypeName name="Factory.IAloMundo"/>
<fullyQualifiedTypeName name="Singleton.SingletonImpl"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="Factory2.CriaFactory2"/>
<fullyQualifiedTypeName name="Factory2.IFact2"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="Proxy.ExemploProxy"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="Observer.ExemploObserver"/>
</qualifiedTypeNameHistroy>
