# This instance will take more time and produce a bigger proof tree 
# with configurable strategy if a -> comparator is used
# because it will first branch on the last formulas
T (((p0,0|p0,1)|p0,2)|p0,3)
T (((p1,0|p1,1)|p1,2)|p1,3)
T (((p2,0|p2,1)|p2,2)|p2,3)
T (((p3,0|p3,1)|p3,2)|p3,3)
T (((p4,0|p4,1)|p4,2)|p4,3)
F (p0,0&p1,0)
F (p0,0&p2,0)
F (p0,0&p3,0)
F (p0,0&p4,0)
F (p1,0&p2,0)
F (p1,0&p3,0)
F (p1,0&p4,0)
F (p2,0&p3,0)
F (p2,0&p4,0)
F (p3,0&p4,0)
F (p0,1&p1,1)
F (p0,1&p2,1)
F (p0,1&p3,1)
F (p0,1&p4,1)
F (p1,1&p2,1)
F (p1,1&p3,1)
F (p1,1&p4,1)
F (p2,1&p3,1)
F (p2,1&p4,1)
F (p3,1&p4,1)
F (p0,2&p1,2)
F (p0,2&p2,2)
F (p0,2&p3,2)
F (p0,2&p4,2)
F (p1,2&p2,2)
F (p1,2&p3,2)
F (p1,2&p4,2)
F (p2,2&p3,2)
F (p2,2&p4,2)
F (p3,2&p4,2)
F (p0,3&p1,3)
F (p0,3&p2,3)
F (p0,3&p3,3)
F (p0,3&p4,3)
F (p1,3&p2,3)
F (p1,3&p3,3)
F (p1,3&p4,3)
F (p2,3&p3,3)
F (p2,3&p4,3)
F (p3,3&p4,3)
T A1->B1
T A2->B2
T A3->B3
T A4->B4
